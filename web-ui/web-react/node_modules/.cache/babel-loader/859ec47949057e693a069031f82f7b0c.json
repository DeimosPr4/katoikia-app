{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar buildFullPath = require('../core/buildFullPath');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout; // Listen for ready state\n\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      } // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n\n\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response); // Clean up request\n\n      request = null;\n    }; // Handle browser request cancellation (as opposed to a manual cancellation)\n\n\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies'); // Add xsrf header\n\n\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    } // Add responseType to request if needed\n\n\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel); // Clean up request\n\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","map":{"version":3,"names":["utils","require","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onabort","handleAbort","onerror","handleError","ontimeout","handleTimeout","timeoutErrorMessage","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"sources":["/Users/paolasanchez/Desktop/Pry4/Katoikia/katoikia-app/web-ui/sakai-react/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}